name: Test and Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'

    - name: Configure pnpm
      run: |
        pnpm config set store-dir ~/.pnpm-store
        pnpm config set cache-dir ~/.pnpm-cache

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run type checking
      run: pnpm typecheck

    - name: Run tests
      run: pnpm test --run

    - name: Generate test coverage
      run: pnpm test:coverage --run

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/coverage-final.json
        fail_ci_if_error: false

    - name: Build project
      run: pnpm build

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Configure pnpm
      run: |
        pnpm config set store-dir ~/.pnpm-store
        pnpm config set cache-dir ~/.pnpm-cache

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run type checking
      run: pnpm typecheck
